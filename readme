üìå Atividade Final de Semestre - API de Autentica√ß√£o
Esta √© uma API de autentica√ß√£o desenvolvida como atividade final de semestre.
A API permite o registro de usu√°rios, login, e verifica√ß√£o de autentica√ß√£o usando JWT (JSON Web Tokens).
Al√©m disso, a API gerencia Usu√°rios, Categorias, Produtos e Pedidos (Orders).

‚úÖ Funcionalidades Principais
Registro de usu√°rios com valida√ß√£o de email e senha.

Login de usu√°rios com gera√ß√£o de token JWT.

Verifica√ß√£o de autentica√ß√£o via token JWT.

CRUD de Categorias, Produtos e Pedidos.

Associa√ß√£o entre usu√°rios e pedidos, e entre categorias e produtos.

Documenta√ß√£o da API com Swagger.

‚úÖ Depend√™ncias
mysql2: Driver MySQL para Node.js.

sequelize: ORM para Node.js que facilita a intera√ß√£o com o banco de dados.

bcrypt: Biblioteca para hash de senhas.

express: Framework web para Node.js.

jsonwebtoken: Biblioteca para gera√ß√£o e valida√ß√£o de tokens JWT.

swagger-ui-express: Middleware para servir a documenta√ß√£o da API.

swagger-jsdoc: Biblioteca para gera√ß√£o autom√°tica da documenta√ß√£o da API.

‚úÖ Instala√ß√£o de Depend√™ncias
npm install mysql2 sequelize bcrypt express jsonwebtoken swagger-ui-express swagger-jsdoc

‚úÖ Configura√ß√£o do Banco de Dados
Crie um banco de dados MySQL chamado:
FinalProject
Atualize as credenciais de conex√£o ao banco no arquivo config/config.js ou onde voc√™ estiver configurando o Sequelize.

‚úÖ Execu√ß√£o da API
node server.js
A API estar√° dispon√≠vel em:
http://localhost:3000

‚úÖ Documenta√ß√£o Swagger
A documenta√ß√£o interativa pode ser acessada em:
http://localhost:3000/api-docs

‚úÖ Testes com Postman
1) Registro de Usu√°rio
POST /users
Content-Type: application/json

{
  "name": "Jo√£o Silva",
  "email": "joao@example.com",
  "password": "123456"
}

2) Login
POST /users/login
Content-Type: application/json

{
  "email": "joao@example.com",
  "password": "123456"
}
Voc√™ receber√° um token JWT.

3) Autentica√ß√£o - Usar o token nas rotas protegidas
Inclua o token JWT no header das requisi√ß√µes protegidas:

Authorization: Bearer <seu_token_jwt>
‚úÖ Rotas da API
üßë‚Äçüíª Usu√°rios
M√©todo	Rota	Descri√ß√£o
GET	/users	Listar todos os usu√°rios
GET	/users/:id	Buscar usu√°rio por ID
PUT	/users/:id	Atualizar usu√°rio
DELETE	/users/:id	Deletar usu√°rio
GET	/users/:id/orders	Buscar pedidos de um usu√°rio

üîê Login / Autentica√ß√£o
M√©todo	Rota	Descri√ß√£o
POST	/users/login	Login do usu√°rio e gera√ß√£o de token JWT

üìÇ Categorias
M√©todo	Rota	Descri√ß√£o
GET	/categories	Listar todas as categorias
GET	/categories/:id	Buscar categoria por ID
POST	/categories	Criar nova categoria
PUT	/categories/:id	Atualizar categoria
DELETE	/categories/:id	Deletar categoria
GET	/categories/:id/products	Listar produtos de uma categoria

üì¶ Produtos
M√©todo	Rota	Descri√ß√£o
GET	/products	Listar todos os produtos
GET	/products/:id	Buscar produto por ID
POST	/products	Criar novo produto
PUT	/products/:id	Atualizar produto
DELETE	/products/:id	Deletar produto
GET	/products/category/:categoryId	Listar produtos por categoria
GET	/products/order/:orderId	Listar produtos de um pedido

üìù Pedidos (Orders)
M√©todo	Rota	Descri√ß√£o
GET	/orders	Listar todos os pedidos
GET	/orders/:id	Buscar pedido por ID
GET	/orders/user/:userId	Buscar pedidos por usu√°rio
POST	/orders	Criar novo pedido
PUT	/orders/:id	Atualizar pedido
DELETE	/orders/:id	Deletar pedido

‚úÖ Exemplo de Cria√ß√£o de Pedido

POST /orders
Content-Type: application/json

{
  "userId": 1,
  "products": "Notebook Lenovo, Teclado Mec√¢nico"
}

‚úÖ Observa√ß√µes Finais
A autentica√ß√£o JWT protege todas as rotas de manipula√ß√£o de usu√°rios, categorias, produtos e pedidos.

Teste tudo no Postman incluindo o token no header Authorization.

A documenta√ß√£o Swagger lista todos os endpoints com exemplos.