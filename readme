üìå Atividade Final de Semestre - API de Autentica√ß√£o com JWT + Sequelize + MySQL
‚úÖ Descri√ß√£o do Projeto
API Node.js que faz autentica√ß√£o JWT e permite CRUD completo de:

Usu√°rios

Categorias

Produtos

Pedidos

Inclui documenta√ß√£o Swagger e prote√ß√£o JWT nas rotas.

‚úÖ Tecnologias Usadas
Node.js

Express

Sequelize

MySQL

JWT (jsonwebtoken)

Bcrypt

Swagger UI (Documenta√ß√£o)

‚úÖ Instala√ß√£o
npm install

Depend√™ncias principais:
npm install mysql2 sequelize bcrypt express jsonwebtoken swagger-ui-express swagger-jsdoc

‚úÖ Configura√ß√£o Banco de Dados
Crie um banco chamado:
FinalProject

‚úÖ Executando o Projeto
node server.js

Servidor sobe na porta:
http://localhost:3000

Documenta√ß√£o Swagger:
http://localhost:3000/api-docs

‚úÖ Testes de API (Exemplos de Requisi√ß√£o)

üìç Usu√°rios (Users)
‚úÖ Criar Usu√°rio

POST /users
Content-Type: application/json
{
  "name": "Jo√£o Silva",
  "email": "joao@example.com",
  "password": "123456"
}

‚úÖ Listar Todos os Usu√°rios
GET /users

‚úÖ Buscar Usu√°rio por ID
GET /users/1

‚úÖ Atualizar Usu√°rio
PUT /users/1
Content-Type: application/json
{
  "name": "Jo√£o Atualizado",
  "email": "joao.new@example.com",
  "password": "novaSenha123"
}

‚úÖ Deletar Usu√°rio
DELETE /users/1

‚úÖ Buscar Pedidos de um Usu√°rio
GET /users/1/orders
Authorization: Bearer <seu_token_jwt>


üìç Login / Autentica√ß√£o
‚úÖ Login
POST /users/login
Content-Type: application/json
{
  "email": "joao@example.com",
  "password": "123456"
}

Retorno:
{
  "token": "eyJhbGciOiJIUzI1NiIsInR..."
}

Depois disso, todas as rotas protegidas precisam do token:

Authorization: Bearer <token>

üìç Categorias (Categories)

‚úÖ Criar Categoria
POST /categories
Content-Type: application/json
Authorization: Bearer <token>
{
  "name": "Eletr√¥nicos"
}

‚úÖ Listar Todas as Categorias
GET /categories
Authorization: Bearer <token>

‚úÖ Buscar Categoria por ID
GET /categories/1
Authorization: Bearer <token>

‚úÖ Atualizar Categoria
PUT /categories/1
Content-Type: application/json
Authorization: Bearer <token>
{
  "name": "Eletr√¥nicos e Acess√≥rios"
}

‚úÖ Deletar Categoria
DELETE /categories/1
Authorization: Bearer <token>

‚úÖ Listar Produtos de uma Categoria
GET /categories/1/products
Authorization: Bearer <token>

üìç Produtos (Products)
‚úÖ Criar Produto
POST /products
Content-Type: application/json
Authorization: Bearer <token>
{
  "name": "Notebook Dell",
  "price": 3500,
  "categoryId": 1
}

‚úÖ Listar Todos os Produtos
GET /products
Authorization: Bearer <token>

‚úÖ Buscar Produto por ID
GET /products/1
Authorization: Bearer <token>

‚úÖ Atualizar Produto
PUT /products/1
Content-Type: application/json
Authorization: Bearer <token>
{
  "name": "Notebook Lenovo",
  "price": 3200,
  "categoryId": 1
}

‚úÖ Deletar Produto
DELETE /products/1
Authorization: Bearer <token>

‚úÖ Listar Produtos por Categoria
GET /products/category/1
Authorization: Bearer <token>

‚úÖ Listar Produtos de um Pedido
GET /products/order/1
Authorization: Bearer <token>

üìç Pedidos (Orders)
‚úÖ Criar Pedido
POST /orders
Content-Type: application/json
Authorization: Bearer <token>
{
  "userId": 1,
  "products": "Notebook Dell, Teclado Mec√¢nico"
}

‚úÖ Listar Todos os Pedidos
GET /orders
Authorization: Bearer <token>

‚úÖ Buscar Pedido por ID
GET /orders/1
Authorization: Bearer <token>

‚úÖ Buscar Pedidos por Usu√°rio
GET /orders/user/1
Authorization: Bearer <token>

‚úÖ Atualizar Pedido
PUT /orders/1
Content-Type: application/json
Authorization: Bearer <token>
{
  "userId": 1,
  "products": "Notebook Lenovo, Mouse Gamer"
}

‚úÖ Deletar Pedido
DELETE /orders/1
Authorization: Bearer <token>

‚úÖ Observa√ß√µes Finais
Todas as rotas de GET, POST, PUT, DELETE (exceto o /users/login) exigem autentica√ß√£o JWT.

Antes de testar, crie um usu√°rio, fa√ßa login, copie o token e use no header Authorization.

A documenta√ß√£o Swagger lista e descreve cada endpoint.
