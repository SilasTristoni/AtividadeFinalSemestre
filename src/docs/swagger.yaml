openapi: 3.0.3
info:
  title: API Final Project
  description: API para gerenciamento de usuários, produtos, pedidos e categorias.
  version: 1.0.0
servers:
  [
    {
      "url": "http://localhost:3000",
    }
  ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: João Silva
        email:
          type: string
          format: email
          example: joao@example.com
      required:
        - name
        - email

    UserInput:
      type: object
      properties:
        name:
          type: string
          example: João Silva
        email:
          type: string
          format: email
          example: joao@example.com
        password:
          type: string
          example: minhaSenha123
      required:
        - name
        - email
        - password

    LoginInput:
      type: object
      properties:
        email:
          type: string
          format: email
          example: joao@example.com
        password:
          type: string
          example: minhaSenha123
      required:
        - email
        - password

    Product:
      type: object
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: Camiseta
        price:
          type: number
          format: float
          example: 49.9
        categoryId:
          type: integer
          example: 2
      required:
        - name
        - price
        - categoryId

    Category:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: Roupas
      required:
        - name

    Order:
      type: object
      properties:
        id:
          type: integer
          example: 5
        userId:
          type: integer
          example: 1
      required:
        - userId

security:
  - bearerAuth: []

paths:
  /users/login:
    post:
      summary: Login de usuário
      tags: [Usuários]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Login realizado com sucesso, retorna token JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login realizado com sucesso.
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIs...
        '400':
          description: Email ou senha não informados
        '401':
          description: Senha inválida
        '404':
          description: Usuário não encontrado

  /users:
    post:
      summary: Criar novo usuário
      tags: [Usuários]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Campos obrigatórios faltando
    get:
      summary: Listar todos usuários
      tags: [Usuários]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Buscar usuário por ID
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID do usuário
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
    put:
      summary: Atualizar usuário
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID do usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Usuário atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
    delete:
      summary: Deletar usuário
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID do usuário
      responses:
        '200':
          description: Usuário excluído com sucesso
        '404':
          description: Usuário não encontrado

  /users/{id}/orders:
    get:
      summary: Buscar pedidos do usuário
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID do usuário
      responses:
        '200':
          description: Lista de pedidos do usuário
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    example: João Silva
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '404':
          description: Usuário não encontrado

  /products:
    get:
      summary: Listar todos os produtos
      tags: [Produtos]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Criar um produto
      tags: [Produtos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Produto criado
        '400':
          description: Dados inválidos
  /products/{id}:
    get:
      summary: Buscar produto por ID
      tags: [Produtos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do produto
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
    put:
      summary: Atualizar produto
      tags: [Produtos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Produto atualizado
        '404':
          description: Produto não encontrado
    delete:
      summary: Deletar produto
      tags: [Produtos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Produto deletado com sucesso
        '404':
          description: Produto não encontrado
  /products/category/{id}:
    get:
      summary: Buscar produtos por categoria
      tags: [Produtos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da categoria
      responses:
        '200':
          description: Produtos da categoria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: Nenhum produto encontrado

  /orders:
    get:
      summary: Listar todos os pedidos
      tags: [Pedidos]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Criar pedido
      tags: [Pedidos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        example: 10
                      quantity:
                        type: integer
                        example: 2
      responses:
        '201':
          description: Pedido criado com sucesso
        '400':
          description: Dados inválidos

  /categories:
    get:
      summary: Listar categorias
      tags: [Categorias]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Criar categoria
      tags: [Categorias]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Categoria criada
        '400':
          description: Dados inválidos

  /categories/{id}:
    get:
      summary: Buscar categoria por ID
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da categoria
      responses:
        '200':
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Categoria não encontrada
    put:
      summary: Atualizar categoria
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Categoria atualizada
        '404':
          description: Categoria não encontrada
    delete:
      summary: Deletar categoria
      tags: [Categorias]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Categoria deletada com sucesso
        '404':
          description: Categoria não encontrada
